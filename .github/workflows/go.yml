# This workflow builds, tests, and creates a release for a Golang project.

name: Go Build, Test, and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'  # Latest stable version

    - name: Install Dependencies
      run: go mod tidy

    - name: Build
      run: go build -v ./...

    - name: Run Tests
      run: go test -v ./... -coverprofile=coverage.out
      continue-on-error: true  # Allow job to continue to the next steps even if tests fail

    - name: Upload Coverage Report
      if: always()
      run: |
        mkdir -p coverage
        go tool cover -html=coverage.out -o coverage/coverage.html

    - name: Upload Coverage and Test Logs
      uses: actions/upload-artifact@v3
      with:
        name: test-coverage-report
        path: coverage/coverage.html

    - name: Upload Test Report
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: coverage.out

  release:
    needs: build  # Run only after build job completes
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run on main branch

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'  # Latest stable version

    - name: Build Release Binary
      run: go build -o jpeg-pdf-tool  # Output a binary with a clear name

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v1.0.${{ github.run_number }}"
        release_name: "Release v1.0.${{ github.run_number }}"
        body: |
          Automated release of JPEG to PDF Converter.
          This release includes:
          - Conversion of JPEG images to PDF
          - Folder or file-based conversion options
          - CLI options for easy use
        draft: false
        prerelease: false

    - name: Upload Binary to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./jpeg-pdf-tool  # Path to the binary built in the previous step
        asset_name: jpeg-pdf-tool
        asset_content_type: application/octet-stream
